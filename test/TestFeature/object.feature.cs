// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QingStor_SDK_CSharp_Test.TestFeature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("the object feature")]
    [NUnit.Framework.CategoryAttribute("object")]
    public partial class TheObjectFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "object.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "the object feature", null, ProgrammingLanguage.CSharp, new string[] {
                        "object"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("the object feature")]
        [NUnit.Framework.TestCaseAttribute("test_object", new string[0])]
        [NUnit.Framework.TestCaseAttribute("中文测试", new string[0])]
        [NUnit.Framework.TestCaseAttribute("田中さんにあげて下さい", new string[0])]
        [NUnit.Framework.TestCaseAttribute("パーティーへ行かないか", new string[0])]
        [NUnit.Framework.TestCaseAttribute("和製漢語", new string[0])]
        [NUnit.Framework.TestCaseAttribute("사회과학원 어학연구소", new string[0])]
        [NUnit.Framework.TestCaseAttribute("찦차를 타고 온 펲시맨과 쑛다리 똠방각하", new string[0])]
        [NUnit.Framework.TestCaseAttribute("社會科學院語學研究所", new string[0])]
        [NUnit.Framework.TestCaseAttribute("울란바토르", new string[0])]
        [NUnit.Framework.TestCaseAttribute("𠜎𠜱𠝹𠱓𠱸𠲖𠳏", new string[0])]
        [NUnit.Framework.TestCaseAttribute(",./;\'[]\\-=", new string[0])]
        [NUnit.Framework.TestCaseAttribute("<>?:\"{}|_+", new string[0])]
        [NUnit.Framework.TestCaseAttribute("!@#$%^&*()`~", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\'", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\"", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\'\'", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\"\"", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\'\"\'", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\"\'\'\'\'\"\'\"", new string[0])]
        [NUnit.Framework.TestCaseAttribute("\"\'\"\'\"\'\'\'\'\"", new string[0])]
        [NUnit.Framework.TestCaseAttribute(@"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", new string[0])]
        [NUnit.Framework.TestCaseAttribute("😍", new string[0])]
        [NUnit.Framework.TestCaseAttribute("👩🏽", new string[0])]
        [NUnit.Framework.TestCaseAttribute("👾 🙇 💁 🙅 🙆 🙋 🙎 🙍", new string[0])]
        [NUnit.Framework.TestCaseAttribute("🐵 🙈 🙉 🙊", new string[0])]
        [NUnit.Framework.TestCaseAttribute("✋🏿 💪🏿 👐🏿 🙌🏿 👏🏿 🙏🏿", new string[0])]
        [NUnit.Framework.TestCaseAttribute("🚾 🆒 🆓 🆕 🆖 🆗 🆙 🏧", new string[0])]
        [NUnit.Framework.TestCaseAttribute("0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟", new string[0])]
        [NUnit.Framework.TestCaseAttribute("❤️ 💔 💌 💕 💞 💓 💗 💖 💘 💝 💟 💜 💛 💚 💙", new string[0])]
        [NUnit.Framework.TestCaseAttribute("１２３", new string[0])]
        [NUnit.Framework.TestCaseAttribute("١٢٣", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ثم نفس سقطت وبالتحديد،/, جزيرتي باستخدام أن دنو. إذ هنا؟ الستار وتنصيب كان. أهّل " +
            "ايطاليا،/ بريطانيا-فرنسا قد أخذ. سليمان، إتفاقية بين ما/, يذكر الحدود أي بعد, مع" +
            "املة بولندا، الإطلاق عل إيو.", new string[0])]
        [NUnit.Framework.TestCaseAttribute("בְּרֵאשִׁית, בָּרָא אֱלֹהִים, אֵת הַשָּׁמַיִם, וְאֵת הָאָרֶץ", new string[0])]
        [NUnit.Framework.TestCaseAttribute("הָיְתָהtestالصفحات التّحول", new string[0])]
        [NUnit.Framework.TestCaseAttribute("﷽", new string[0])]
        [NUnit.Framework.TestCaseAttribute("ﷺ", new string[0])]
        [NUnit.Framework.TestCaseAttribute("مُنَاقَشَةُ سُبُلِ اِسْتِخْدَامِ اللُّغَةِ فِي النُّظُمِ الْقَائِمَةِ وَفِيم يَخُ" +
            "صَّ التَّطْبِيقَاتُ الْحاسُوبِيَّةُ،", new string[0])]
        public virtual void TheObjectFeature(string key, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("the object feature", exampleTags);
#line 4
  this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.When(string.Format("put object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
    testRunner.Then("put object status code is 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
    testRunner.When(string.Format("copy object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
    testRunner.Then("copy object status code is 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
    testRunner.When(string.Format("move object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
    testRunner.Then("move object status code is 201", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
    testRunner.When(string.Format("get object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
    testRunner.Then("get object status code is 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
    testRunner.And("get object content length is 1048576", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
    testRunner.When(string.Format("get object \"{0}\" with content type \"video/mp4; charset=utf8\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
    testRunner.Then("get object content type is \"video/mp4; charset=utf8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
    testRunner.When(string.Format("get object \"{0}\" with query signature", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
    testRunner.Then("get object with query signature content length is 1048576", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
    testRunner.When(string.Format("head object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.Then("head object status code is 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
    testRunner.When(string.Format("options object \"{0}\" with method \"GET\" and origin \"qingcloud.com\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
    testRunner.Then("options object status code is 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
    testRunner.When(string.Format("delete object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
    testRunner.Then("delete object status code is 204", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
    testRunner.When(string.Format("delete the move object with key \"{0}\"", key), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
    testRunner.Then("delete the move object status code is 204", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
